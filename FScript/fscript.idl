import "oaidl.idl";
import "ocidl.idl";

[
    object,
    uuid(5FCC49E6-1F7C-448c-BA9D-0E2160819F43),
    dual,
    helpstring("IFARR"),
    pointer_default(unique)
]
interface IFARR : IDispatch
{
    HRESULT emitResult([in] UINT querykey, [in] BSTR title, [in] BSTR path, [in] BSTR icon, [in,defaultvalue(1)] int entrytype, [in,defaultvalue(2)] int resultpostprocessing, [in,defaultvalue(300)] int score, [in,defaultvalue("")] BSTR groupname, [in,optional] VARIANT args);
    HRESULT setState([in] UINT querykey, [in] UINT s);
    HRESULT notifyStateChange([in] UINT querykey);
    HRESULT getStrValue([in] BSTR command, [out,retval] BSTR *value);
    HRESULT setStrValue([in] BSTR command, [in,defaultvalue("")] BSTR value);
    HRESULT debug([in] BSTR txt);
    HRESULT setInterval([in] UINT id, [in] UINT elapse, [in] IDispatch *pFunc);
    HRESULT killInterval([in] UINT id);
    HRESULT showOptions();
    HRESULT exec([in] BSTR file, [in] BSTR params, [in] BSTR directory, [out,retval] VARIANT_BOOL *b);
    HRESULT getIniValue([in] BSTR file, [in] BSTR section, [in] BSTR key, [in,defaultvalue("")] BSTR def, [out,retval] BSTR *o);
    HRESULT setIniValue([in] BSTR file, [in] BSTR section, [in] BSTR key, [in] BSTR value);
    HRESULT getKeyState([in] UINT vk, [out,retval] SHORT *state);
    HRESULT getQueryString([out,retval] BSTR *query);
    HRESULT getObject([in] BSTR query, [out,retval] IDispatch **p);
    [vararg] HRESULT newCFunction([in] BSTR fnName, [in] int rValType, [in] SAFEARRAY(VARIANT) *pArgsTypes, [out,retval] VARIANT *retVal);
};

[

    uuid(CF464340-B930-4e41-A5B8-A99AE3F5AC7D),
    version(1.0),
    helpstring("farr Type Library")
]
library FARRLib
{
    importlib("stdole32.tlb");
    importlib("stdole2.tlb");
    interface IFARR;
}